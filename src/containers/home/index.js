import React from "react";
import Card from 'antd/lib/card';
import { map, prop } from 'lodash/fp';
import data from '../../config.json';
import styles from "./style.less";


export default ({  }) => (
  <div className={styles.Home}>
  <p>卡片式设计是一个不错的选择，需要对不同的信息进行整合，提高用户信息获取速度，减少用户思考时间时，卡片式设计是一个不错的选择。但设计是为了解决问题，如果因为设计而设计，强行使用卡片式，可能会得到相反的效果。</p>
  <h2>一、卡片设计是什么</h2>
  <p>1、某种程度上来说，卡片式设计是在栅格的基础上更进一步，将整个页面的内容切割为N多个区域，不仅能给人很好的视觉一致性，而且更易于设计上的迭代。这样的设计在处理PC和Mobile多平台页面一致性时有很好的效果，正面的典型例子就是Google+了。但如果你的网站和手机App在整体结构、交互方式上本来差别就非常大的话，使用卡片式设计就无法充分发挥其优势。</p>
  <p>2、卡片式设计的另一个典型好处是可以将不同大小、不同媒介形式的内容单元以统一的方式进行混合呈现。最常见的就是图文混排，既要做到视觉上尽量一致，又要平衡文字和图片的强弱，这时卡片设计经常有奇效。2012年的豆瓣首页为了平衡日记、相册、图书、电影、活动等不同内容元的混合呈现所使用的设计，本质上也是一种卡片。</p>

 。
  </div>
);
